kind: pipeline
type: docker
name: default

trigger:
  branch:
    - staging
    - production
  event:
    - push
    - pull_request

steps:
  - name: build nginx docker image
    image: plugins/docker
    settings:
      context: nginx
      username:
        from_secret: dockerhub_username
      password:
        from_secret: dockerhub_password
      repo: scootekunst/supercortex_frontend_nginx-${DRONE_BRANCH}
      dockerfile: nginx/Dockerfile
      cache_from: scootekunst/supercortex_frontend_nginx-${DRONE_BRANCH}
      tags:
        - latest
      when:
        changeset:
          - nginx/Dockerfile
          - nginx/**/*

  - name: run ansible playbook
    image: scootekunst/ansible:latest
    environment:
      SSH_KEY:
        from_secret: ssh_key_${DRONE_BRANCH}
      ANSIBLE_HOST_KEY_CHECKING: "False"
      ANSIBLE_VAULT_PASSWORD:
        from_secret: ansible_vault_password_${DRONE_BRANCH}
    commands:
      - mkdir -p /root/.ssh
      - export APP_ENV=${DRONE_BRANCH}
      - echo "$${SSH_KEY}" > /root/.ssh/id_ed25519_aslan_ansible
      - chmod 600 /root/.ssh/id_ed25519_aslan_ansible
      - echo "$${ANSIBLE_VAULT_PASSWORD}" > /tmp/vault_password
      - cat /tmp/vault_password | base64
      - ansible-playbook --inventory playbooks/inventories/${DRONE_BRANCH} --vault-password-file /tmp/vault_password playbooks/playbook.yml --tags "remote" -v
---
kind: secret
name: dockerconfig
get:
  path: docker
  name: config